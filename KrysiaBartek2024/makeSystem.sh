#!/bin/bash

SOURCE_DIR="./source"
BUILD_DIR="./build"

OUTPUT_FILE="${SOURCE_DIR}/SYSTEM.tex"

> "$OUTPUT_FILE"

declare -A file_groups

for file in "${SOURCE_DIR}"/*.tex; do
    if [ -f "$file" ]; then
        if [[ "$(basename "$file")" == "SYSTEM.tex" ]]; then
            continue
        fi

        priority=$(sed -n 's/^%%% PRIORITY: \([0-9]*\)$/\1/p' "$file")

        if [ -z "$priority" ]; then
            echo "Warning: No priority found in file '$file'. File will be ignored."
            continue
        fi

        file_groups[$priority]+="$file "
    fi
done

echo '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%' > "$OUTPUT_FILE"
echo '%%%%%%%%%%%%%%% This file has been generated automatically. %%%%%%%%%%%%%%%' >> "$OUTPUT_FILE"
echo '%%%%%%%%%%%%%%% Do not edit this file manually. %%%%%%%%%%%%%%%%%%%%%%%%%%%' >> "$OUTPUT_FILE"
echo '%%%%%%%%%%%%%%% See README for more information. %%%%%%%%%%%%%%%%%%%%%%%%%%' >> "$OUTPUT_FILE"
echo '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%' >> "$OUTPUT_FILE"
echo '' >> "$OUTPUT_FILE"
echo '\documentclass[12pt, a4paper]{article}' >> "$OUTPUT_FILE"
echo '\usepackage{../../lib/bridgetex2}' >> "$OUTPUT_FILE"
echo '\usepackage{polyglossia}' >> "$OUTPUT_FILE"
echo '\usepackage{graphicx}' >> "$OUTPUT_FILE"
echo '\usepackage{enumitem}' >> "$OUTPUT_FILE"
echo '\usepackage{hyperref}' >> "$OUTPUT_FILE"
echo '\hypersetup{' >> "$OUTPUT_FILE"
echo '    colorlinks=true,' >> "$OUTPUT_FILE"
echo '    linkcolor=blue,' >> "$OUTPUT_FILE"
echo '    filecolor=magenta,' >> "$OUTPUT_FILE"
echo '    urlcolor=cyan,' >> "$OUTPUT_FILE"
echo '}' >> "$OUTPUT_FILE"
echo '\setmainlanguage{english}' >> "$OUTPUT_FILE"
echo '' >> "$OUTPUT_FILE"
echo '\title{Bridge Bidding System}' >> "$OUTPUT_FILE"
echo '\author{Krystyna Gasińska, Bartek Słupik}' >> "$OUTPUT_FILE"
echo '\begin{document}' >> "$OUTPUT_FILE"
echo '\maketitle' >> "$OUTPUT_FILE"
echo '' >> "$OUTPUT_FILE"

TOC_FILE="${SOURCE_DIR}/toc_entries.tex"
> "$TOC_FILE"

i=0

echo '\begin{description}' >> "$OUTPUT_FILE"
for priority in $(echo "${!file_groups[@]}" | tr ' ' '\n' | sort -n); do
    for file in ${file_groups[$priority]}; do
        ((i++))
        title=$(sed -n 's/^%%% TITLE: \(.*\)$/\1/p' "$file")
        file_id=$(basename "$file" .tex)

        content=$(sed -n '/%%% SYSTEM BEGIN/,/%%% SYSTEM END/p' "$file" | sed '1d;$d')

        echo "\section{\texorpdfstring{$title}{$file_id}}\label{sec:$file_id}" >> "$TOC_FILE"
        echo "$content" >> "$TOC_FILE"
        echo '' >> "$TOC_FILE"

        echo "\def\hyperlinkedtitle{\hyperref[sec:$file_id]{${i}\, ${title}}}" >> "$OUTPUT_FILE"
        echo "\item[\hyperlinkedtitle] \hfill \pageref{sec:$file_id}" >> "$OUTPUT_FILE"
    done
done

echo '\end{description}' >> "$OUTPUT_FILE"
echo '\newpage' >> "$OUTPUT_FILE"

cat "$TOC_FILE" >> "$OUTPUT_FILE"

echo '\end{document}' >> "$OUTPUT_FILE"


cd "$SOURCE_DIR"

lualatex -interaction=batchmode --output-directory="../$BUILD_DIR" "SYSTEM.tex"
LUALATEX_STATUS=$?

cd ..

if [ $LUALATEX_STATUS -ne 0 ] || [ ! -f "$BUILD_DIR/SYSTEM.pdf" ]; then
    echo "Error: lualatex failed to create PDF. See log for details."
    exit 1
fi


mv "$BUILD_DIR/SYSTEM.pdf" "./"

echo "PDF generated: SYSTEM.pdf"
